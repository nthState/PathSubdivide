@Tutorial() {
  @Intro(title: "Getting Started with PathSubdivide in SwiftUI") {
    In this tutorial, I'll show you how to integrate Path Subdivide
    into your SwiftUI project to subdivide Shapes into finer detail!
    
  }
  
  @Section(title: "Subdivide a Rectangle") {
    @ContentAndMedia {
      Let's get started with a Rectangle.
      
      It's quite hard to visualize that a shape has been subdivided, as unless you warp it, or change the colour
      of each element, it should look exactly the same, so in this demo, we're going to warp the shape
      slightly so that you can see the shape is now in different parts

    }
    
    @Steps {
      @Step {
        Start of with a View, this one displays a Rectangle with a red border
        
        @Code(name: "Rectangle.swift", file: "01_Rectangle.swift") {
          @Image(source: "01_Rectangle.png", alt: "accessible description")
        }
      }
      
      @Step {
        Import the ``PathSubdivide`` & `PathWarp` Swift Packages
        
        @Code(name: "Rectangle.swift", file: "02_Rectangle.swift") {
          
        }
      }
      
      @Step {
        Apply the SubDivide ViewModifier to the Shape, by default, the shape will
        increase it's elements by x2
        
        @Code(name: "Rectangle.swift", file: "03_Rectangle.swift") {
          @Image(source: "03_Rectangle.png", alt: "accessible description")
        }
      }
      
      @Step {
        Set the `times` parameters to 2, this means we'll create twice as many elements.
        
        So a single element will be broken down into two on the first iteration, and then
        again, leaving us with four line parts on the first element
        
        @Code(name: "Rectangle.swift", file: "04_Rectangle.swift") {
          @Image(source: "04_Rectangle.png", alt: "accessible description")
        }
      }
    }
  }
}
